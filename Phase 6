gdb) disas phase_6
Dump of assembler code for function phase_6:
=> 0x00000000004010f9 <+0>:	push   %r13
   0x00000000004010fb <+2>:	push   %r12
   0x00000000004010fd <+4>:	push   %rbp
   0x00000000004010fe <+5>:	push   %rbx
   0x00000000004010ff <+6>:	sub    $0x68,%rsp
   0x0000000000401103 <+10>:	mov    %fs:0x28,%rax
   0x000000000040110c <+19>:	mov    %rax,0x58(%rsp)
   0x0000000000401111 <+24>:	xor    %eax,%eax
   0x0000000000401113 <+26>:	mov    %rsp,%rsi
   0x0000000000401116 <+29>:	call   0x40144c <read_six_numbers>
   0x000000000040111b <+34>:	mov    %rsp,%r12
   0x000000000040111e <+37>:	mov    $0x0,%r13d
   0x0000000000401124 <+43>:	mov    %r12,%rbp
   0x0000000000401127 <+46>:	mov    (%r12),%eax
   0x000000000040112b <+50>:	sub    $0x1,%eax
   0x000000000040112e <+53>:	cmp    $0x5,%eax
   0x0000000000401131 <+56>:	jbe    0x401138 <phase_6+63>
   0x0000000000401133 <+58>:	call   0x40142a <explode_bomb>
   0x0000000000401138 <+63>:	add    $0x1,%r13d
   0x000000000040113c <+67>:	cmp    $0x6,%r13d
   0x0000000000401140 <+71>:	je     0x40117f <phase_6+134>
   0x0000000000401142 <+73>:	mov    %r13d,%ebx
   0x0000000000401145 <+76>:	movslq %ebx,%rax
   0x0000000000401148 <+79>:	mov    (%rsp,%rax,4),%eax
   0x000000000040114b <+82>:	cmp    %eax,0x0(%rbp)
   0x000000000040114e <+85>:	jne    0x401155 <phase_6+92>
   0x0000000000401150 <+87>:	call   0x40142a <explode_bomb>
   0x0000000000401155 <+92>:	add    $0x1,%ebx
   0x0000000000401158 <+95>:	cmp    $0x5,%ebx
--Type <RET> for more, q to quit, c to continue without paging--
   0x000000000040115b <+98>:	jle    0x401145 <phase_6+76>
   0x000000000040115d <+100>:	add    $0x4,%r12
   0x0000000000401161 <+104>:	jmp    0x401124 <phase_6+43>
   0x0000000000401163 <+106>:	mov    0x8(%rdx),%rdx
   0x0000000000401167 <+110>:	add    $0x1,%eax
   0x000000000040116a <+113>:	cmp    %ecx,%eax
   0x000000000040116c <+115>:	jne    0x401163 <phase_6+106>
   0x000000000040116e <+117>:	mov    %rdx,0x20(%rsp,%rsi,2)
   0x0000000000401173 <+122>:	add    $0x4,%rsi
   0x0000000000401177 <+126>:	cmp    $0x18,%rsi
   0x000000000040117b <+130>:	jne    0x401184 <phase_6+139>
   0x000000000040117d <+132>:	jmp    0x401198 <phase_6+159>
   0x000000000040117f <+134>:	mov    $0x0,%esi
   0x0000000000401184 <+139>:	mov    (%rsp,%rsi,1),%ecx
   0x0000000000401187 <+142>:	mov    $0x1,%eax
   0x000000000040118c <+147>:	mov    $0x6032f0,%edx
   0x0000000000401191 <+152>:	cmp    $0x1,%ecx
   0x0000000000401194 <+155>:	jg     0x401163 <phase_6+106>
   0x0000000000401196 <+157>:	jmp    0x40116e <phase_6+117>
   0x0000000000401198 <+159>:	mov    0x20(%rsp),%rbx
   0x000000000040119d <+164>:	lea    0x20(%rsp),%rax
   0x00000000004011a2 <+169>:	lea    0x48(%rsp),%rsi
   0x00000000004011a7 <+174>:	mov    %rbx,%rcx
   0x00000000004011aa <+177>:	mov    0x8(%rax),%rdx
   0x00000000004011ae <+181>:	mov    %rdx,0x8(%rcx)
   0x00000000004011b2 <+185>:	add    $0x8,%rax
   0x00000000004011b6 <+189>:	mov    %rdx,%rcx
   0x00000000004011b9 <+192>:	cmp    %rsi,%rax
   0x00000000004011bc <+195>:	jne    0x4011aa <phase_6+177>
   0x00000000004011be <+197>:	movq   $0x0,0x8(%rdx)
--Type <RET> for more, q to quit, c to continue without paging--
   0x00000000004011c6 <+205>:	mov    $0x5,%ebp
   0x00000000004011cb <+210>:	mov    0x8(%rbx),%rax
   0x00000000004011cf <+214>:	mov    (%rax),%eax
   0x00000000004011d1 <+216>:	cmp    %eax,(%rbx)
   0x00000000004011d3 <+218>:	jge    0x4011da <phase_6+225>
   0x00000000004011d5 <+220>:	call   0x40142a <explode_bomb>
   0x00000000004011da <+225>:	mov    0x8(%rbx),%rbx
   0x00000000004011de <+229>:	sub    $0x1,%ebp
   0x00000000004011e1 <+232>:	jne    0x4011cb <phase_6+210>
   0x00000000004011e3 <+234>:	mov    0x58(%rsp),%rax
   0x00000000004011e8 <+239>:	xor    %fs:0x28,%rax
   0x00000000004011f1 <+248>:	je     0x4011f8 <phase_6+255>
   0x00000000004011f3 <+250>:	call   0x400b00 <__stack_chk_fail@plt>
   0x00000000004011f8 <+255>:	add    $0x68,%rsp
   0x00000000004011fc <+259>:	pop    %rbx
   0x00000000004011fd <+260>:	pop    %rbp
   0x00000000004011fe <+261>:	pop    %r12
   0x0000000000401200 <+263>:	pop    %r13
   0x0000000000401202 <+265>:	ret    
End of assembler dump.
